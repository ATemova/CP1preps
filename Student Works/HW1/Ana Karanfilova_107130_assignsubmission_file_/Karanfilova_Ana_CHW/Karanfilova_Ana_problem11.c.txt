/*Write a C program that does the following:
1. asks the user to enter two numbers R and C where the values of R and C are less than
10;
2. asks the user to enter the elements of the matrix (of order R rows * C columns) and
prints it out on the screen;
3. asks the user to enter the elements of the matrix (of order C rows * R columns) and
prints it out on the screen;
4. multiplies the two matrices and displays the result on the screen.
Also check whether a user has provided integers for R and C and if they are a positive number
and less than 10. If the input values for R and C are not positive integer and are not lower than
10, print out the error message.*/
#include<stdio.h>

void array_input(int R, int C, int dArr[R][C]){
    //input matrix elements
    printf("\nFor the matrix of size [%d][%d] input\n", R, C);
    for( int dCtr1=0; dCtr1<R; dCtr1++ ){
        for( int dCtr2=0; dCtr2<C; dCtr2++ ){
            printf("Element at index %d%d: ", dCtr1, dCtr2);
            scanf("%d", &dArr[dCtr1][dCtr2]);
        }//end inner for(columns)
    }//end outer for(rows)
}
void array_print(int R, int C, int dArr[R][C]){
    //prints matrix elements
    for( int dCtr1=0; dCtr1<R; dCtr1++ ){
        for( int dCtr2=0; dCtr2<C; dCtr2++ ){
            printf("%d ",dArr[dCtr1][dCtr2]);
        }//end of inner for(columns)
        printf("\n");
    }//end of outer for(rows)
}
int main(){
    //declare variables
    int dRows,dClmn;
    //interactive input of matrix size
    printf("\nInput number of rows, not larger than 10: ");
    scanf("%d", &dRows);
    printf("\nInput number of columns, not larger than 10: ");
    scanf("%d", &dClmn);
    //check if input meets the specified requirements
    if( dRows<0 || dRows>10 || dClmn<0 || dClmn>10 ){
        printf("\nERROR\n");
    }//end if
    else{
        //input and print elements of first matrix
        int dArr1[dRows][dClmn];
        array_input(dRows, dClmn, dArr1);
        printf("\nEntered first matrix:\n");
        array_print(dRows, dClmn, dArr1);
        //input and print elements of second matrix
        int dArr2[dClmn][dRows];
        array_input(dClmn, dRows, dArr2);
        printf("\nEntered second matrix:\n");
        array_print(dClmn, dRows, dArr2);
        //compute and print elements of resulting matrix
        int dArr3[dRows][dRows];
        printf("\nResult of multiplication ([%d][%d]matrix):\n", dRows,dRows);
         for( int dCtr1=0; dCtr1<dRows; dCtr1++ ){
            for( int dCtr2=0; dCtr2<dRows; dCtr2++ ){
                 dArr3[dCtr1][dCtr2]=0;
                for(int dCtr3=0; dCtr3<dClmn; dCtr3++){
                    dArr3[dCtr1][dCtr2]+=dArr1[dCtr1][dCtr3]*dArr2[dCtr3][dCtr2];
                }//end of inner for(elements that form the result
                printf("%d ", dArr3[dCtr1][dCtr2]);
            }//end of middle for(columns)
            printf("\n");
        }//end of outer for(rows)

    }
    return 0;
}//end main